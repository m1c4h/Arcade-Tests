*** Settings ***
Documentation     These tests are aimed at testing a API broker tests
#Resource          ../Keywords/WebActions.txt
Library           RequestsLibrary
Library           Selenium2Library              run_on_failure=Capture Page Screenshot
Library           Collections
Library           String
Library           OperatingSystem
Library           FakerLibrary
Library           DateTime
Library           DebugLibrary
Variables         ../Resources/SetEnvironment.py     ${RALLY_TEST_ENV}    ${ON_DEMAND}   ${RALLY_SELENIUM_BROWSER}
Resource          ../Elements/API_Arcade_Profile_Elements.txt



*** Variables ***

${SERVICE_NAME}   api
${Str1}     css=[value*='
${Str2}     ']

*** Keywords ***
Build Session
    Create Session	    rallyroot   	https://dev-arcade.werally.in

    set test variable    &{headers}    Content-Type=application/json    Accept=Language=en-US    Pragma=no-cache    Accept=application/json    Cache-Control=no-cache    Accept-Encoding=gzip,deflate    User-Agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:42) Gecko/20100101 Firefox/42.0




Open Website
    [Arguments]    ${Site_URL}
    [Documentation]    Open the main website.
#    Log    Opening the rally connect website in ${RALLY_TEST_URL}
    log    ${Site_URL}
    #following is here to accommodate osprey not liking simultaneous requests.
    ${randomDelay}=    Evaluate    random.sample(range(1000, 10000), 1)    random
    sleep    ${randomDelay[0]}ms
    Selenium2Library.Open Browser   ${Site_URL}    ${RALLY_SELENIUM_BROWSER}    \    ${RALLY_REMOTE_URL}    ${RALLY_DESIRED_CAPABILITIES}
    Comment    Run Keyword Unless    Open Browser    ${Site_URL}    browser=${RALLY_SELENIUM_BROWSER}
    Set Window Size    ${1450}    ${1200}
    set selenium speed    ${RALLY_SELENIUM_SPEED}
    set selenium timeout    30


Open DG and set params
   [Arguments]      ${Endpoint}     ${Status}
   Open Website    ${Rally_Set_Param}
   Click element    css=[ng-model*="settings.selectedPartner"]
   click element    css=[value*="optum"]
   click element    xpath=//select[@ng-model='settings.selectedEndpoint']
   click element    xpath=//select[@ng-model='settings.selectedEndpoint']
   ${Element_Location} =    catenate    SEPARATOR=  ${Str1.replace(" ", "")}${Endpoint}${Str2.replace(" ", "")}
   log      ${Element_Location}
   click element     ${Element_Location}
   click element     css=[ng-model*="settings.selectedStatus"]
   click element    css=[ng-model*="settings.selectedStatus"]
   ${Element_Location} =    catenate    SEPARATOR=  ${Str1.replace(" ", "")}${Status}${Str2.replace(" ", "")}
   log      ${Element_Location}
   click element     ${Element_Location}
   click element     css=[ng-click*="setEndpoint()"]
